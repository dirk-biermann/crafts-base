<div id="start" class="header-spc"></div>
{{#with this.project}}
<div class="w3-container">
  <h2 class="small-caps">Project Edit</h2>
  <div class="w3-card w3-margin-bottom w3-white">
    <div class="w3-container w3-deep-orange">
      <h2>Edit information for a project</h2>
    </div>
    <div class="w3-container">
      <form class="w3-margin-bottom" action='/secret/project/edit/{{this._id}}' method="POST">
        <label class="w3-text-blue"><b>Project Title</b></label>
        <input class="w3-input w3-border w3-light-grey" name="name" type="text" required value="{{this.name}}">

        <label class="w3-text-blue"><b>Description</b></label>
        <textarea class="w3-input w3-border w3-light-grey w3-ta-3" maxlength="500" name="description" rows="2">{{this.description}}</textarea>

        <label class="w3-text-blue"><b>Notes</b></label>
        <textarea class="w3-input w3-border w3-light-grey w3-ta-3" maxlength="500" name="notes" rows="2">{{this.notes}}</textarea>

        <label class="w3-text-blue"><b>Status</b></label>
        <select class="w3-select w3-border w3-light-grey" name="status">
          <option value="" disabled selected>Choose project status</option>
          <option value="New">New</option>
          <option value="Planned">Planned</option>
          <option value="Completed">Completed</option>
        </select><br>
        
        <button class="w3-btn w3-blue" type="submit">Save</button>
      </form>
    </div>
  </div>
  <a href="/secret/project/detail/{{this._id}}" class="w3-button w3-wide w3-blue w3-small w3-margin-bottom"><i class="fa fa-eye"></i> View</a>
  <a href="/secret/project/view" class="w3-button w3-wide w3-blue w3-small w3-margin-bottom"><i class="fa fa-eye"></i> View Projects</a>
</div>
{{/with}}

<!--

  name:           { type: String, required: [true, 'Enter a pattern name']},
  owner:          { type: Schema.Types.ObjectId, ref: 'User'},
  description:    { type: String, required: false},
  notes:          { type: String},
  components:     {
    pattern: [ { type: Schema.Types.ObjectId, ref: 'Pattern'} ],
    fabrics: [ { type: Schema.Types.ObjectId, ref: 'Fabric'} ]
  },
  status:         { type: String, enum: ['New', 'Planned','Completed']}
-->